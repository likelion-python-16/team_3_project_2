# Generated by Django 5.2.5 on 2025-08-11 06:22

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CafeIf",
            fields=[
                ("cafe_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=140)),
                ("address", models.CharField(max_length=255)),
                ("biz_code", models.CharField(blank=True, max_length=50)),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="ResidentPopulation",
            fields=[
                ("rp_key", models.AutoField(primary_key=True, serialize=False)),
                ("total_population", models.PositiveIntegerField()),
                ("population_per_ages", models.PositiveIntegerField()),
                ("income_avg", models.PositiveIntegerField()),
                ("rent_avg", models.PositiveIntegerField()),
                ("traffic_level", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="CafeReview",
            fields=[
                ("review_id", models.AutoField(primary_key=True, serialize=False)),
                ("review_score", models.FloatField()),
                ("review_count", models.PositiveIntegerField()),
                ("review_text", models.TextField()),
                (
                    "cafe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="cafes.cafeif",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CafeTrendAI",
            fields=[
                ("trend_id", models.AutoField(primary_key=True, serialize=False)),
                ("is_risk_area", models.BooleanField()),
                ("is_trendy", models.BooleanField()),
                ("is_growth_expectation", models.BooleanField()),
                ("recommendation_level", models.PositiveSmallIntegerField()),
                ("predicted_growth_rate", models.FloatField()),
                ("investment_opportunity", models.BooleanField()),
                (
                    "rp_key",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trends",
                        to="cafes.residentpopulation",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="cafeif",
            name="rp_key",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="cafes",
                to="cafes.residentpopulation",
            ),
        ),
        migrations.CreateModel(
            name="CafeSales",
            fields=[
                ("sales_id", models.AutoField(primary_key=True, serialize=False)),
                ("date", models.DateTimeField()),
                ("price", models.PositiveIntegerField()),
                ("visitor_count", models.PositiveIntegerField()),
                ("aov", models.DecimalField(decimal_places=2, max_digits=10)),
                ("sales", models.PositiveIntegerField()),
                (
                    "cafe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sales",
                        to="cafes.cafeif",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["cafe", "date"], name="cafes_cafes_cafe_id_18d008_idx"
                    )
                ],
            },
        ),
    ]
